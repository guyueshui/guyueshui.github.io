<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>水阙</title>
    <link>https://guyueshui.github.io/</link>
    <description>Recent content on 水阙</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 06 Sep 2019 19:37:55 +0800</lastBuildDate>
    
	<atom:link href="https://guyueshui.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>服务端开发预备知识</title>
      <link>https://guyueshui.github.io/post/server-develop-preliminaries/</link>
      <pubDate>Fri, 06 Sep 2019 19:37:55 +0800</pubDate>
      
      <guid>https://guyueshui.github.io/post/server-develop-preliminaries/</guid>
      <description>操作系统 摘自《程序员面试白皮书》 进程vs.线程 进程（process）与线程（thread）最大的区别是进程拥有自己的地址空间，某进程内的线程</description>
    </item>
    
    <item>
      <title>设计模式学习笔记</title>
      <link>https://guyueshui.github.io/post/design-pattern-notes/</link>
      <pubDate>Mon, 02 Sep 2019 11:05:10 +0800</pubDate>
      
      <guid>https://guyueshui.github.io/post/design-pattern-notes/</guid>
      <description>如无特殊声明：本文所有UML图均出自《图说设计模式》。在此特别鸣谢！ Singleton 单例模式解决了全局变量的问题，全局只能创建一个实例，保证任何请求该实例</description>
    </item>
    
    <item>
      <title>多线程学习笔记</title>
      <link>https://guyueshui.github.io/post/concurrent-programming/</link>
      <pubDate>Thu, 29 Aug 2019 21:40:23 +0800</pubDate>
      
      <guid>https://guyueshui.github.io/post/concurrent-programming/</guid>
      <description>开一篇多线程学习笔记，记录下在实习过程中遇到的一些简单问题。 注意：这是一篇以学习笔记，难免有误，主要写给自己参考。请酌情判别，如有错误，也欢</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 学习笔记</title>
      <link>https://guyueshui.github.io/post/cpp-learn/</link>
      <pubDate>Wed, 28 Aug 2019 22:52:32 +0800</pubDate>
      
      <guid>https://guyueshui.github.io/post/cpp-learn/</guid>
      <description>诚如是，Life is too short to learn c++. 此篇记录一些我在学习cpp过程中遇到的一些知识点，仅作记录并梳理之效。里面可能会有大量参考其他网络博客，如有侵权</description>
    </item>
    
    <item>
      <title>博客迁移记录</title>
      <link>https://guyueshui.github.io/post/blog-trans/</link>
      <pubDate>Sun, 25 Aug 2019 16:00:50 +0800</pubDate>
      
      <guid>https://guyueshui.github.io/post/blog-trans/</guid>
      <description>终于还是干了！很早以前就有了这个想法，起初使用Hexo搭的博客，折腾了一段时间，选了一个不错的主题Melody。一切都进行的很好，直到有一天</description>
    </item>
    
    <item>
      <title>GDB 基本用法</title>
      <link>https://guyueshui.github.io/post/basic-gdb-usages/</link>
      <pubDate>Sun, 18 Aug 2019 16:14:24 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/basic-gdb-usages/</guid>
      <description>&lt;p&gt;废话以后有时间再加。&lt;/p&gt;

&lt;p&gt;首先编译时开启调试选项：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;g++ main.cpp -g -O0&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;-O0&lt;/code&gt;指定编译器的优化级别为0，即不优化。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>位域结构体简介</title>
      <link>https://guyueshui.github.io/post/bit-field-struct/</link>
      <pubDate>Tue, 06 Aug 2019 20:43:02 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/bit-field-struct/</guid>
      <description>最近实习接触到一个新的知识点，C/C++的位域结构体。 以下开始摘抄自：here 位段(bit-field)是以位为单位来定义结构体(或联合体)</description>
    </item>
    
    <item>
      <title>面试笔记整理</title>
      <link>https://guyueshui.github.io/post/interview-notes/</link>
      <pubDate>Mon, 08 Jul 2019 20:14:17 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/interview-notes/</guid>
      <description>总结一下这几个月的面试经历中被问到的问题，虽说问得都很浅，但是，问深了我也不会呀！ C++相关 Q: std::vector push_back 的复杂度是多少？ A: O(1), amortized constant. Q: vector从1</description>
    </item>
    
    <item>
      <title>The Beauty of Recursion</title>
      <link>https://guyueshui.github.io/post/the-beauty-of-recursion/</link>
      <pubDate>Tue, 23 Apr 2019 09:08:28 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/the-beauty-of-recursion/</guid>
      <description>Declaration: this article is in long time editing...
Here comes some beautiful recursive solutions to some problems.
Examples Some of the problems have a very nice recursive structure, we can deal with them just using one step recursion.
Fibonacci Numbers The first comes very famous Fibonacci Numbers, which is a sequence of
0, 1, 1, 2, 3, 5, 8, 13 ...
The structure is easily captured, if we use $\text{fib}(n)$ to denote the $n^{\text{th}}$ Fibonacci Number (n is assumed to start from 0).</description>
    </item>
    
    <item>
      <title>神奇的位运算</title>
      <link>https://guyueshui.github.io/post/%E7%A5%9E%E5%A5%87%E7%9A%84%E4%BD%8D%E8%BF%90%E7%AE%97/</link>
      <pubDate>Mon, 08 Apr 2019 10:35:16 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/%E7%A5%9E%E5%A5%87%E7%9A%84%E4%BD%8D%E8%BF%90%E7%AE%97/</guid>
      <description>In editing... 必备知识 以下部分转载自：http://www.cnblogs.com/junsky/archive/2009/08/06/1540727</description>
    </item>
    
    <item>
      <title>A collection of some coding problems</title>
      <link>https://guyueshui.github.io/post/coding-problems/</link>
      <pubDate>Sun, 07 Apr 2019 19:31:59 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/coding-problems/</guid>
      <description>场景题 题一：最高得分 一个长度为$N$的序列，玩家每次只能从头部或尾部拿数字，不能从中间拿。拿走的数字依次从左到右排列在自己面前。拿完$N$个</description>
    </item>
    
    <item>
      <title>瞎说 KMP 算法</title>
      <link>https://guyueshui.github.io/post/%E7%9E%8E%E8%AF%B4kmp%E7%AE%97%E6%B3%95/</link>
      <pubDate>Thu, 04 Apr 2019 00:05:41 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/%E7%9E%8E%E8%AF%B4kmp%E7%AE%97%E6%B3%95/</guid>
      <description>前天做百度笔试，没想到居然出往年的题！哼！更惨的是出了我也不会！我以为只是一个简简单单的字符串匹配，没想到要动用这么难懂的算法。说起来算法导</description>
    </item>
    
    <item>
      <title>初尝 C&#43;&#43; 类设计</title>
      <link>https://guyueshui.github.io/post/%E5%88%9D%E5%B0%9D-c-%E7%B1%BB%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Tue, 02 Apr 2019 21:31:40 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/%E5%88%9D%E5%B0%9D-c-%E7%B1%BB%E8%AE%BE%E8%AE%A1/</guid>
      <description>最近在准备笔试，于是在各种网站上刷题嘛。期间做了百度某年的一道编程题。 小B最近对电子表格产生了浓厚的兴趣，她觉得电子表格很神奇，功能远比她想</description>
    </item>
    
    <item>
      <title>LeetCode: Sum of Two Integers</title>
      <link>https://guyueshui.github.io/post/leetcode-sum-of-two-integers/</link>
      <pubDate>Tue, 26 Mar 2019 14:53:51 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/leetcode-sum-of-two-integers/</guid>
      <description>记录一下LeetCode做的一道题。要求实现两个整数的加法，但不能使用内置的+或-. 原题地址：https://leetcode.com/pr</description>
    </item>
    
    <item>
      <title>浅谈 Logistic 回归</title>
      <link>https://guyueshui.github.io/post/%E6%B5%85%E8%B0%88-logistic-%E5%9B%9E%E5%BD%92/</link>
      <pubDate>Fri, 15 Mar 2019 22:59:39 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/%E6%B5%85%E8%B0%88-logistic-%E5%9B%9E%E5%BD%92/</guid>
      <description>In editing... Logistic回归属于分类模型！！！ 从最小二乘说起 线性回归 概率解释 Sigmoid函数的引入 如果把我比作一张白纸，在我的知识储备中，现在</description>
    </item>
    
    <item>
      <title>快速自定义 LaTeX 排版字体</title>
      <link>https://guyueshui.github.io/post/%E8%B0%88%E8%B0%88-latex-%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%97%E4%BD%93/</link>
      <pubDate>Fri, 08 Mar 2019 15:41:10 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/%E8%B0%88%E8%B0%88-latex-%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%97%E4%BD%93/</guid>
      <description>字体设置 在导言区引入fontspec包：\usepackage{fontspec} 使用如下命令自定义字体： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17</description>
    </item>
    
    <item>
      <title>Linux 相关信息速查</title>
      <link>https://guyueshui.github.io/post/linux-%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF%E9%80%9F%E6%9F%A5/</link>
      <pubDate>Thu, 07 Mar 2019 19:22:02 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/linux-%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF%E9%80%9F%E6%9F%A5/</guid>
      <description>本文主要引用 Liam Huang 的博客。 系统相关 1 2 3 4 5 6 7 8 9 10 lsb_release -a # 查看操作系统版本 head -n 1 /etc/issue # 查看操作系统版本 cat /proc/version # 查看操作系统内核信息 uname -a # 查看操作</description>
    </item>
    
    <item>
      <title>《报任安书》</title>
      <link>https://guyueshui.github.io/post/%E8%B0%88%E8%B0%88%E6%8A%A5%E4%BB%BB%E5%AE%89%E4%B9%A6/</link>
      <pubDate>Thu, 07 Mar 2019 18:27:18 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/%E8%B0%88%E8%B0%88%E6%8A%A5%E4%BB%BB%E5%AE%89%E4%B9%A6/</guid>
      <description>太史公牛马走司马迁，再拜言。 少卿足下：曩者辱赐书，教以慎于接物，推贤进士为务，意气勤勤恳恳。若望仆不相师，而用流俗人之言，仆非敢如此也。仆虽</description>
    </item>
    
    <item>
      <title>SICP Learning Notes</title>
      <link>https://guyueshui.github.io/post/sicp-learning-notes/</link>
      <pubDate>Thu, 21 Feb 2019 14:50:23 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/sicp-learning-notes/</guid>
      <description>当我们考察一门语言时，主要看三点 primitives：元操作是什么 means of combinations：如何组合 means of abstraction：如何抽象</description>
    </item>
    
    <item>
      <title>Useful Tricks</title>
      <link>https://guyueshui.github.io/tricks/</link>
      <pubDate>Thu, 17 Jan 2019 22:19:05 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/tricks/</guid>
      <description>1 2 3 4 5 6 7 8 9 __ __ __ __ ____ ___ /\ \ /\ \ /\ \ __ /\ \ /\ _`\ /\_ \ \ `\`\\/&amp;#39;/__ __ ___\ \ \___ /\_\\ \/ ____ \ \ \L\ \//\ \ ___ __ `\ `\ /&amp;#39;/\ \/\ \ /&amp;#39;___\ \ _ `\/\ \\/ /&amp;#39;,__\ \ \ _ &amp;lt;&amp;#39;\ \ \ / __`\ /&amp;#39;_ `\ `\ \ \\ \ \_\</description>
    </item>
    
    <item>
      <title>Polybar 的配置笔记</title>
      <link>https://guyueshui.github.io/post/polybar-%E7%9A%84%E9%85%8D%E7%BD%AE%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Wed, 16 Jan 2019 21:33:17 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/polybar-%E7%9A%84%E9%85%8D%E7%BD%AE%E7%AC%94%E8%AE%B0/</guid>
      <description>前略。 今年早些时候，从 Gnome 换到 i3，原因是因为原来的 gnome 被我弄崩溃了。一时难以解决，又想到之前好几次隐约感觉到 gnome 的不稳定，一气之下决定换一个轻量</description>
    </item>
    
    <item>
      <title>Matrix Factorization</title>
      <link>https://guyueshui.github.io/post/matrix-factorization/</link>
      <pubDate>Thu, 03 Jan 2019 21:07:38 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/matrix-factorization/</guid>
      <description>Preliminaries Def: A matrix $A \in M_n$ is normal if $AA^∗ = A^∗A$, that is, if $A$ commutes with its conjugate transpose.
Def: A complex matrix $A$ is unitary if $AA^∗ = I$ or $A^∗A = I$, and a real matrix $B$ is orthogonal if $BB^T = I$ or $B^TB = I$.
There is no so-called &amp;quot;orthonormal&amp;quot; matrix. There is just an orthogonal matrix whose rows or columns are orthonormal vectors.</description>
    </item>
    
    <item>
      <title>在 Beamer 中使用参考文献</title>
      <link>https://guyueshui.github.io/post/use-reference-in-beamer/</link>
      <pubDate>Thu, 03 Jan 2019 16:05:47 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/use-reference-in-beamer/</guid>
      <description>Needs polish! 前略。 Beamer 引用参考文献与文章类似，只是一开始听说 beamer 不支持 \cite，搞得我走了不少弯路（其实是可以的）。 使用 bibtex 假设你有 mybeamer.tex 文件，在同目录下新</description>
    </item>
    
    <item>
      <title>Exponential Distribution</title>
      <link>https://guyueshui.github.io/post/exponetial-distribution/</link>
      <pubDate>Tue, 25 Dec 2018 22:21:49 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/exponetial-distribution/</guid>
      <description>Story  The Exponential distribution is the continuous counterpart to the Geometric distribution. The story of the Exponential distribution is analogous, but we are now waiting for a success in continuous time, where successes arrive at a rate of $\lambda$ successes per unit of time. The average number of successes in a time interval of length $t$ is $\lambda t$, though the actual number of successes varies randomly. An Exponential random variable represents the waiting time until the first arrival of a success.</description>
    </item>
    
    <item>
      <title>一些推导</title>
      <link>https://guyueshui.github.io/post/%E4%B8%80%E4%BA%9B%E6%8E%A8%E5%AF%BC/</link>
      <pubDate>Thu, 20 Dec 2018 19:18:29 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/%E4%B8%80%E4%BA%9B%E6%8E%A8%E5%AF%BC/</guid>
      <description>高斯分布的微分熵 $X \sim \mathcal{N}(\mu, \sigma^2)~$，$\displaystyle f(x)=\frac{1}{\sqrt{2\pi\sigma^2}</description>
    </item>
    
    <item>
      <title>Vim Quick Reference</title>
      <link>https://guyueshui.github.io/post/vim%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5/</link>
      <pubDate>Thu, 20 Dec 2018 19:17:54 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/vim%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5/</guid>
      <description>This article needs polish, do not truely trust it! Vim is so-called the god of editors, but not so friendly to new users. Today we will cover some techniques and trick of vim, for further reference. General Pattern A vim operation consists of three parts, namely 1 [OPERATOR][NUMBER][MOTION] where OPERATOR - what you want to do? This mainly covers copy, cut, paste, etc. NUMBER - how many times do you</description>
    </item>
    
    <item>
      <title>Melody 主题的一些个人更改</title>
      <link>https://guyueshui.github.io/post/melody-theme-customization/</link>
      <pubDate>Wed, 19 Dec 2018 14:31:24 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/melody-theme-customization/</guid>
      <description>更改字体 Melody 主题字体配置文件在 $BLOG/themes/melody/source/css/var.styl，其中 $BLOG 为 Hexo 博客根目录。截取一段如</description>
    </item>
    
    <item>
      <title>Links</title>
      <link>https://guyueshui.github.io/links/</link>
      <pubDate>Tue, 18 Dec 2018 10:25:24 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/links/</guid>
      <description>Friends Ryan Algorithms VisuAlgo Programming Languages Learn You a Haskell Learn You a Haskell (cn) Modern C++ Tutorial Learn X in Y Minutes SICP H5Book Solution Video Lecture: bilibili Machine Learning LaTeX Equation Recognition Symbol Recognition Online Equation Editor Getting Started with LaTeX LaTeX-WikiBook For Fun Full Emoji List, v11.0 Vim color scheme: space-vim-dark SpaceVim 图床：路过、sm.ms 修身养性</description>
    </item>
    
    <item>
      <title>HTML 美化 Markdown 排版</title>
      <link>https://guyueshui.github.io/post/html-%E7%BE%8E%E5%8C%96-markdown-%E6%8E%92%E7%89%88/</link>
      <pubDate>Sun, 16 Dec 2018 00:04:38 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/html-%E7%BE%8E%E5%8C%96-markdown-%E6%8E%92%E7%89%88/</guid>
      <description>Markdown 是一门轻量标记型语言，因其简单易用而受众甚广。但是正因其简单，故而也有一部分局限性（虽然说它保留的即是最常用、最基本的排版功能）。本文就来</description>
    </item>
    
    <item>
      <title>札记</title>
      <link>https://guyueshui.github.io/sketch/</link>
      <pubDate>Fri, 14 Dec 2018 13:59:49 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/sketch/</guid>
      <description>2019 年 9 月 C++静态函数有什么不同？ 静态函数具有单文件作用域，不能被其他文件所用 不会和其他文件中的同名函数冲突 静态函数分配在程序的静态内存区，</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://guyueshui.github.io/about/</link>
      <pubDate>Wed, 12 Dec 2018 22:06:18 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/about/</guid>
      <description>Site Welcome! This blog is mainly written for self-reference, which covers math, tech, and maybe some other notes (learning or working). Nevertheless, it&#39;s really my pleasure if some of my articles is useful for you. :)
Timeline of this site    Time Event     2018-12-24 First published by Hexo, theme Melody   2019-08-25 Move to Hugo, theme Even   2019-08-25 Add comment system powered by gitment    Me I am yychi, a student.</description>
    </item>
    
    <item>
      <title>Manage Dotfiles by Git</title>
      <link>https://guyueshui.github.io/post/manage-dotfiles-by-git/</link>
      <pubDate>Fri, 16 Nov 2018 10:32:19 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/manage-dotfiles-by-git/</guid>
      <description>对于Linux用户，在 $HOME 文件夹下，一般都有大量的隐藏文件，形如.conf,.xxxrc等，这些都是程序的配置文件。很多人也许花了一个下午，一</description>
    </item>
    
    <item>
      <title>Android 刷机的一般步骤</title>
      <link>https://guyueshui.github.io/post/android%E5%88%B7%E6%9C%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%AD%A5%E9%AA%A4/</link>
      <pubDate>Tue, 18 Sep 2018 23:00:05 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/android%E5%88%B7%E6%9C%BA%E7%9A%84%E4%B8%80%E8%88%AC%E6%AD%A5%E9%AA%A4/</guid>
      <description>1. 事前准备 先想好为什么要刷机？想清楚了吗？真的想清楚了吗！好的，接下来我们要做的事应该是打开一堆网页，一堆对应自己机型的刷机教程帖，还要做好</description>
    </item>
    
    <item>
      <title>记一次重装 Linux</title>
      <link>https://guyueshui.github.io/post/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%87%8D%E8%A3%85linux/</link>
      <pubDate>Mon, 13 Aug 2018 10:07:05 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%87%8D%E8%A3%85linux/</guid>
      <description>放假回家，因故将笔记本电池弄到枯竭。结果再次开启，发现 startx 启动 gnome-session 失败。几经解决未果，只好重装！ 安装 Archlinux 基本安装步骤都是按照 ArchWiki 上的 Installation Guide 以及简书上的</description>
    </item>
    
    <item>
      <title>最大熵对应的概率分布</title>
      <link>https://guyueshui.github.io/post/%E6%9C%80%E5%A4%A7%E7%86%B5%E5%AF%B9%E5%BA%94%E7%9A%84%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83/</link>
      <pubDate>Wed, 01 Aug 2018 18:02:36 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/%E6%9C%80%E5%A4%A7%E7%86%B5%E5%AF%B9%E5%BA%94%E7%9A%84%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83/</guid>
      <description>最大熵定理 设 $X \sim p(x)$ 是一个连续型随机变量，其微分熵定义为 $$ h(X) = - \int p(x)\log p(x) dx $$ 其中，$\log$ 一般取自然对数 $\ln$, 单位为 奈特（nats）。 考虑如下优</description>
    </item>
    
    <item>
      <title>某不正经的个人总结</title>
      <link>https://guyueshui.github.io/post/%E6%9F%90%E4%B8%8D%E6%AD%A3%E7%BB%8F%E7%9A%84%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/</link>
      <pubDate>Fri, 23 Jun 2017 14:41:27 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/%E6%9F%90%E4%B8%8D%E6%AD%A3%E7%BB%8F%E7%9A%84%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;p&gt;不知何时开始，整理情绪，对我来说成了一件十分困难的事。每次想发点什么，总怕被说矫情，想想还是不发了吧。想必很多灵感都是这样被扼杀了吧。但是人总是要改变的，无论随着时间，还是随着空间。​四年还是变了不少的，比如变胖了什么的（这是主要的，饭量大我也没办法，括弧笑）。性情什么的也有变化，主要是理工男气质（猥琐？），当然也有正经的变化。改变是福是祸无从判断，但每个改变都是自己的选择，所以也应该释然。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>假想敌</title>
      <link>https://guyueshui.github.io/post/%E5%81%87%E6%83%B3%E6%95%8C/</link>
      <pubDate>Wed, 26 Apr 2017 14:49:15 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/%E5%81%87%E6%83%B3%E6%95%8C/</guid>
      <description>：今天也是满负罪恶感的一天呢？ --嗯，其实我还蛮会自我减压的。 ：这已经称得上是放纵了呢！ --不不不，我的神经有紧绷过吗？ ：那你准备何时紧绷。</description>
    </item>
    
    <item>
      <title>Newifi Mini 安装 PandoraBox</title>
      <link>https://guyueshui.github.io/post/newifi-mini%E5%AE%89%E8%A3%85pandorabox/</link>
      <pubDate>Tue, 21 Feb 2017 16:01:55 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/newifi-mini%E5%AE%89%E8%A3%85pandorabox/</guid>
      <description>首先 Newifi mini 是一款很小巧美观的路由器，颜值即是正义嘛。再加上性价比高，易于刷写第三方系统，所以嘛，值得一买。 规格参数 WAN(10/100Mbps) LAN(10/100Mbps)*2 双频：2.4GHz:30</description>
    </item>
    
    <item>
      <title>使用 Tar 备份 Archlinux</title>
      <link>https://guyueshui.github.io/post/%E4%BD%BF%E7%94%A8tar%E5%A4%87%E4%BB%BDarchlinux/</link>
      <pubDate>Sat, 10 Sep 2016 19:00:57 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/%E4%BD%BF%E7%94%A8tar%E5%A4%87%E4%BB%BDarchlinux/</guid>
      <description>Linux 需要备份吗？本身 Linux 系统的稳定性就是一流，文件系统也不易产生碎片，只要不是硬盘突然崩掉了，你可以有 100 种方法来修复系统的各种问题而不用重装系统</description>
    </item>
    
    <item>
      <title>古别</title>
      <link>https://guyueshui.github.io/post/%E5%8F%A4%E5%88%AB/</link>
      <pubDate>Sun, 28 Feb 2016 14:51:23 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/%E5%8F%A4%E5%88%AB/</guid>
      <description>几日度离魂，午后闲萧索。 起身斜照间，指染门前土。 道是无情人，偏作有情甫。 原是离别多，何必离别苦。</description>
    </item>
    
    <item>
      <title>遣怀・并序</title>
      <link>https://guyueshui.github.io/post/%E9%81%A3%E6%80%80/</link>
      <pubDate>Thu, 21 Jan 2016 14:53:03 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/%E9%81%A3%E6%80%80/</guid>
      <description>今冬返数日，串村之后，与老者话聊，竟不见其中人许。细问之下，原是身逝黄土。时天气晴寒，鸡蜷狗缩，又东北风呼啸，坐家中远观旧物，因忆旧人：十余</description>
    </item>
    
    <item>
      <title>雪压轩集</title>
      <link>https://guyueshui.github.io/post/%E9%9B%AA%E5%8E%8B%E8%BD%A9%E9%9B%86/</link>
      <pubDate>Sun, 27 Dec 2015 14:39:33 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/%E9%9B%AA%E5%8E%8B%E8%BD%A9%E9%9B%86/</guid>
      <description>1. 【浣溪沙】 暖雨无晴漏几丝，牧童斜插嫩花枝。小田新麦上场时。 汲水种瓜偏怒早，忍烟炊黍又嗔迟。日长酸透软腰肢。 据传，这首词是用粉写在一张芍药叶</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://guyueshui.github.io/post/hello-world/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://guyueshui.github.io/post/hello-world/</guid>
      <description>Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.
Quick Start Create a new post 1  $ hexo new &amp;#34;My New Post&amp;#34;   More info: Writing
Run server 1  $ hexo server   More info: Server
Generate static files 1  $ hexo generate   More info: Generating</description>
    </item>
    
  </channel>
</rss>