<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on 水阙</title>
    <link>https://guyueshui.github.io/tags/python/</link>
    <description>Recent content in python on 水阙</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 12 Dec 2021 12:55:45 +0800</lastBuildDate><atom:link href="https://guyueshui.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A point of python metaclass</title>
      <link>https://guyueshui.github.io/post/python-metaclass/</link>
      <pubDate>Sun, 12 Dec 2021 12:55:45 +0800</pubDate>
      
      <guid>https://guyueshui.github.io/post/python-metaclass/</guid>
      <description>Create class dynamically Python doc says: By default, classes are constructed using type(). The class body is executed in a new namespace and the class name is bound locally to the result of type(name, bases, namespace). That&amp;rsquo;s means, a class statement is equivalent to the call of type method with three arguments: name: name of the class bases: tuple of the parent class (for inheritance, can be empty) attrs: dictionary</description>
    </item>
    
    <item>
      <title>Python Iterables</title>
      <link>https://guyueshui.github.io/post/python-iterables/</link>
      <pubDate>Sun, 21 Feb 2021 22:26:30 +0800</pubDate>
      
      <guid>https://guyueshui.github.io/post/python-iterables/</guid>
      <description>Python的迭代器（iterator）、生成器（generator）、可迭代对象（iterable），虽是老生常谈，但我毕竟要记录一下自己</description>
    </item>
    
  </channel>
</rss>
