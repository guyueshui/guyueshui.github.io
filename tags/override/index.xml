<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Override on 水阙</title><link>https://guyueshui.github.io/tags/override/</link><description>Recent content in Override on 水阙</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 03 Sep 2025 21:46:26 +0800</lastBuildDate><atom:link href="https://guyueshui.github.io/tags/override/index.xml" rel="self" type="application/rss+xml"/><item><title>析构函数与 override</title><link>https://guyueshui.github.io/post/override-destructor/</link><pubDate>Wed, 03 Sep 2025 21:40:03 +0800</pubDate><guid>https://guyueshui.github.io/post/override-destructor/</guid><description>&lt;ul&gt;
&lt;li&gt;&lt;code&gt;virtual&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;override&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;final&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面三个关键字在继承体系中起着重要作用。&lt;code&gt;virtual&lt;/code&gt;不用多说，声明虚函数必备的关键字。&lt;code&gt;override&lt;/code&gt;和&lt;code&gt;final&lt;/code&gt;是 C++11 中引入的，二者的作用其实更多是提醒开发者自己，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我正在重写一个虚函数&lt;/li&gt;
&lt;li&gt;我正在重写一个虚函数，并且不希望再被派生类重写这个函数&lt;/li&gt;
&lt;/ul&gt;</description></item></channel></rss>